{"version":3,"sources":["hok/withAuthRedirect.js","components/dialogs/dialogItem/DialogItem.js","components/dialogs/message/Message.js","components/dialogs/Dialogs.js","components/dialogs/DialogsConteiner.js"],"names":["mapStateToPropsForRedirect","state","isAuth","authReducer","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","mame","Message","className","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","Dialogs","console","log","dialogElement","dialogsPage","dialogs","map","item","id","messages","values","sendMessage","newMessageBody","compose","dialogsReducer","newMessageText","dispatch","sendMessageCreator"],"mappings":"2NAMIA,EAA6B,SAACC,GAE9B,MAAM,CACFC,OAAQD,EAAME,YAAYD,SAKrBE,EAAmB,SAACC,GAAc,IACrCC,EADoC,4JAEtC,WACQ,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAG,eAHb,GACVC,IAAML,WAWtC,OAJmCM,YAAQX,EAARW,CAAoCL,K,mGCb5DM,EATI,SAACJ,GAEhB,OACI,8BACKA,EAAMK,QCKJC,EATC,SAACN,GAIb,OACI,qBAAKO,UAAU,GAAf,SAAmBP,EAAMQ,W,yCCkC3BC,EAAcC,YAAiB,IAuB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EApBL,SAACZ,GACpB,OACI,sBAAMc,SAAUd,EAAMe,aAAtB,SACI,gCACI,cAACC,EAAA,EAAD,CACAC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,KAAM,iBACNC,YAAa,uBAEb,8BACA,wDAWDC,EAxDC,SAACvB,GACdwB,QAAQC,IAAIzB,GACX,IAAI0B,EAAgB1B,EAAM2B,YAAYC,QAAQC,KAAK,SAAAC,GAAI,OAAK,cAAC,EAAD,CAAYT,KAAMS,EAAKT,KAAoBU,GAAID,EAAKC,IAAlBD,EAAKC,OAC/FvB,EAAUR,EAAM2B,YAAYK,SAASH,KAAI,SAAArB,GAAO,OAAK,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BuB,GAAIvB,EAAQuB,IAAxBvB,EAAQuB,OAYzG,OAAI/B,EAAMN,OAGN,sBAAKa,UAAU,UAAf,UACI,qBAAKA,UAAU,cAAf,SACCmB,IAED,qBAAKnB,UAAU,WAAf,SACCC,IAGD,cAACG,EAAD,CAAqBG,SAlBT,SAACmB,GAEjBjC,EAAMkC,YAAYD,EAAOE,sBAKJ,cAAC,IAAD,CAAUlC,GAAG,Y,iBCM3BmC,sBACXjC,aAxBkB,SAACV,GAEnB,MAAO,CACHkC,YAAalC,EAAM4C,eAAeV,YAClCW,eAAgB7C,EAAM4C,eAAeV,YAAYW,mBAQhC,SAACC,GAEtB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,YAAmBL,SASpCvC,IAFWwC,CAGbb","file":"static/js/4.2239d416.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) =>{\r\n    \r\n    return{\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n                if(!this.props.isAuth) return <Navigate to='/login'/>;\r\n                return <Component {...this.props}/>\r\n}\r\n}\r\n\r\n   let ConnectAuthRedirectComponenet = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\r\n    return ConnectAuthRedirectComponenet;\r\n}\r\n","const DialogItem = (props) =>{\r\n\r\n    return(\r\n        <div>\r\n            {props.mame}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","const Message = (props) =>{\r\n\r\n\r\n\r\n    return(\r\n        <div className=''>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import './dialogs.css';\r\nimport DialogItem from './dialogItem/DialogItem';\r\nimport Message from './message/Message';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Textarea } from '../common/formsControl/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\r\n\r\nconst Dialogs = (props) =>{\r\n   console.log(props)\r\n    let dialogElement = props.dialogsPage.dialogs.map( item => (<DialogItem name={item.name} key={item.id} id={item.id}/>));\r\n    let message = props.dialogsPage.messages.map(message => (<Message message={message.message} key={message.id} id={message.id}/>))\r\n\r\n\r\n   \r\n\r\n    let addNewMessage = (values) =>{\r\n        \r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n\r\n    if(!props.isAuth) return <Navigate to='/login'/>\r\n\r\n    return(\r\n        <div className='dialogs'>\r\n            <div className='dialog-item'>\r\n            {dialogElement}\r\n            </div>\r\n            <div className='messages'>\r\n            {message}\r\n                \r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\n\r\nconst AddMessageForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                component={Textarea}\r\n                validate={[required, maxLength50]}\r\n                name={\"newMessageBody\"}\r\n                placeholder={\"Enter your message\"}>\r\n                </Field>\r\n                <div>\r\n                <button >Add post</button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from '../../hok/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) =>{\r\n    \r\n    return {\r\n        dialogsPage: state.dialogsReducer.dialogsPage,\r\n        newMessageText: state.dialogsReducer.dialogsPage.newMessageText,\r\n        \r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    \r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps ),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"sourceRoot":""}